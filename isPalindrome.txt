class ListNode {
     int val;
     ListNode next;
     ListNode(int x) { val = x; }
}

class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head == null || head.next == null){
            return true;
        }
        ListNode fast = head;
        ListNode slow = head;
        int count = 0;
        while(fast != null && fast.next != null){
            fast = fast.next.next;
            slow = slow.next;
            count++;
        }
        int[] array = new int[count];
        fast = head;
        int i = 0;
        ListNode slow1 = slow;
        while(slow1 != null && i < count){
            array[i++] = fast.val;
            fast = fast.next;
            slow1 = slow1.next;
        }
        if(slow1 != null){
            slow = slow.next;
        }
        while(slow != null && --i >= 0){
            if(array[i] != slow.val){
                return false;
            }
            slow = slow.next;
        }
        return true;
    }
}

public class Test {
    public static void main(String[] args) {
        Solution sol = new Solution();
        ListNode l1 = new ListNode(1);
        ListNode l2 = new ListNode(0);
        ListNode l3 = new ListNode(1);
        l1.next = l2;
        l2.next = l3;
        System.out.println(sol.isPalindrome(l1));
    }
}
